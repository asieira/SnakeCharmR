#!/bin/sh

# If SNAKECHARMR_PYTHON_VERSION was not provided, assume there's a python
# interpreter in PATH and obtain its version
if [ -z "$SNAKECHARMR_PYTHON_VERSION" ]; then
  SNAKECHARMR_PYTHON_VERSION=`python -c "import sys; print(str(sys.version_info.major) + '.' + str(sys.version_info.minor))"`
  echo Auto-determined Python version ${SNAKECHARMR_PYTHON_VERSION}
  PYTHON_INTERPRETER=python
else
  echo Using SNAKECHARMR_PYTHON_VERSION=${SNAKECHARMR_PYTHON_VERSION}
  PYTHON_INTERPRETER=python${SNAKECHARMR_PYTHON_VERSION}
fi 

# Get exec-prefix from Python interpreter and find the lib locations from there
EXEC_PREFIX=`${PYTHON_INTERPRETER} -c "import sys; print(sys.exec_prefix)"`
echo Detected EXEC_PREFIX=${EXEC_PREFIX}

# Warn about the lack of PYTHONHOME
if [ -z "$PYTHONHOME" ]; then
  echo PYTHONHOME is not defined, this might cause an error when loading the package.
  echo Please try setting it to "${EXEC_PREFIX}" on a system level if you have issues.
fi

# Set include and library folders according to whether we're using Rtools / mingw
# or offical Python packages.
if [ -d "${EXEC_PREFIX}/lib/python${SNAKECHARMR_PYTHON_VERSION}/config" ]; then
  LIBDIR=${EXEC_PREFIX}/lib/python${SNAKECHARMR_PYTHON_VERSION}/config
else
  LIBDIR=${EXEC_PREFIX}/libs
fi

if [ -d "${EXEC_PREFIX}/include/python${SNAKECHARMR_PYTHON_VERSION}" ]; then
  INCDIR=${EXEC_PREFIX}/include/python${SNAKECHARMR_PYTHON_VERSION}
else
  INCDIR=${EXEC_PREFIX}/include
fi

echo "PKG_LIBS=-L'${LIBDIR}' -lpython${SNAKECHARMR_PYTHON_VERSION}" > src/Makevars.win
echo "PKG_CPPFLAGS=-I'${INCDIR}'" >> src/Makevars.win
echo "CXX_STD=CXX11" >> src/Makevars.win
